(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{357:function(t,a,e){"use strict";e.r(a);var s=e(42),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"使用ssh-keygen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用ssh-keygen"}},[t._v("#")]),t._v(" 使用"),e("code",[t._v("ssh-keygen")])]),t._v(" "),e("p",[t._v("Command line instructions")]),t._v(" "),e("h2",{attrs:{id:"git-global-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-global-setup"}},[t._v("#")]),t._v(" Git global setup")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git config --global user.name "username"\ngit config --global user.email "lanianer@qq.com"\n')])])]),e("h2",{attrs:{id:"…or-create-a-new-repository-on-the-command-line"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#…or-create-a-new-repository-on-the-command-line"}},[t._v("#")]),t._v(" …or create a new repository on the command line")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('echo "# pas" >> README.md\ngit init\ngit add README.md\ngit commit -m "first commit"\ngit remote add origin https://github.com/HaoChunYang/pas.git\ngit push -u origin master\n')])])]),e("h2",{attrs:{id:"…or-push-an-existing-repository-from-the-command-line"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#…or-push-an-existing-repository-from-the-command-line"}},[t._v("#")]),t._v(" …or push an existing repository from the command line")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git remote add origin https://github.com/HaoChunYang/pas.git\ngit push -u origin master\n")])])]),e("h1",{attrs:{id:"常用git命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用git命令"}},[t._v("#")]),t._v(" 常用git命令")]),t._v(" "),e("p",[t._v("git tag")]),t._v(" "),e("p",[t._v("git tag v1.0.1")]),t._v(" "),e("p",[t._v("git push origin v1.0.1")]),t._v(" "),e("p",[t._v("git tag -d v1.0.1")]),t._v(" "),e("p",[t._v("git push origin :refs/tags/v1.0.1  //删除远程tag")]),t._v(" "),e("p",[t._v("git push origin dev  //将分支推送到远端")]),t._v(" "),e("p",[t._v("git branch --set-upstream-to=origin/dev  //关联")]),t._v(" "),e("p",[t._v("git branch -a //查看本地和远程的所有分支\ngit branch -r //查看远程分支")]),t._v(" "),e("p",[t._v("git fetch //将远程分支与本地分支保持同步\ngit checkout -b 本地分支名x origin/远程分支名x  //拉取远程分支并创建对应的本地分支")]),t._v(" "),e("h2",{attrs:{id:"eg-git-从远程仓库获取所有分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eg-git-从远程仓库获取所有分支"}},[t._v("#")]),t._v(" eg: git 从远程仓库获取所有分支")]),t._v(" "),e("ol",[e("li",[t._v("首先同步所有远程分支，如下：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git branch -r | grep -v \'\\->\' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done\n')])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("将本地所有分支与远程保持同步 "),e("code",[t._v("git fetch --all")])])]),t._v(" "),e("li",[e("p",[t._v("最后拉取所有分支代码 "),e("code",[t._v("git pull --all")])])])])])}),[],!1,null,null,null);a.default=i.exports}}]);