(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[353],{2857:(n,e,s)=>{"use strict";s.r(e),s.d(e,{data:()=>a});const a={key:"v-1db2be0a",path:"/old_blog/iOS%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E8%B7%AF%E5%BE%84%E7%9A%84%E8%AF%B4%E6%98%8E%E5%8F%8A%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95.html",title:"目录说明",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"old_blog/iOS中文件目录路径的说明及获取方法.md",git:{updatedTime:1597237797e3}}},2681:(n,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>r});const a=(0,s(6252).uE)('<h1 id="目录说明"><a class="header-anchor" href="#目录说明">#</a> 目录说明</h1><p>我们的app在手机中存放的路径是：<code>/var/mobile/Applications/83CC3EE2-D296-4AA4-8EBB-377CC29579C7</code></p><p>后面的目录83CC3EE2-D296-4AA4-8EBB-377CC29579C7是iPhone自动生成的，里面包含了四个文件夹：</p><ol><li><p><code>AppName.app</code> 目录：这是应用程序的程序包目录，包含应用程序本身。由于应用改程序必须经过签名。所以再运行程序时，是不可以对这个目录进行内容修改的，否则会造成应用无法启动。</p></li><li><p><code>Documents</code>目录：这是文档目录。有关应用的所有数据文件应该写入到这个目录下，这个目录用于存储用户数据或者其他应该定期备份的信息。iTunes会同步改应用程序的此文件内容，适合存储一些重要的数据</p></li><li><p><code>Library</code>目录：库目录，这个目录下面还有两个子目录：Caches 和 Preferences</p></li></ol><p><code>Preferences</code>目录：包含应用程序的编号设置文件，存放<code>NSUserDefaults</code>保存的.plist文件。iTunes同步该应用时会同步该文件夹中的内容。</p><p><code>Caches</code>目录：缓存目录。用于存储应用程序专用的支持文件，保存应用程序再次启动过程中需要的信息。ITunes不会同步改文件夹，保存一些不需要备份的数据</p><ol start="4"><li><code>tmp</code>目录：临时目录。这个目录用于存放临时文件，保存应用程序再次启动过程中不再需要的信息。iTunes不会同步此文件夹，系统可能在应用没运行时就删除该目录下的文件，所以此目录适合保存应用中的一些临时文件，用完就删除。</li></ol><h1 id="文件路径获取方法"><a class="header-anchor" href="#文件路径获取方法">#</a> 文件路径获取方法</h1><p>下面就是这些文件夹获取路径的方法：</p><ol><li>获取AppName.app 目录路径：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    NSString *path = [[NSBundle mainBundle] bundlePath];\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>获取Documents目录路径的方法：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    NSString *documentPath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).firstObject;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li><code>Library/Caches</code>目录路径方法：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    NSString *cachePath = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES).firstObject;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="4"><li><code>Library/Application Support</code>目录路径方法：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory,   NSUserDomainMask, YES) objectAtIndex:0]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="5"><li>tmp目录路径的方法：</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    NSString *tmpPaht = NSTemporaryDirectory();\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="6"><li>获取沙盒主目录路径</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    NSString *homePaht = NSHomeDirectory();\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>例子：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>NSFileManager* fm=[NSFileManager defaultManager];\nif(![fm fileExistsAtPath:[self dataFilePath]]){\n\n//下面是对该文件进行制定路径的保存\n[fm createDirectoryAtPath:[self dataFilePath] withIntermediateDirectories:YES attributes:nil error:nil];\n\n//取得一个目录下得所有文件名\nNSArray *files = [fm subpathsAtPath: [self dataFilePath] ];\n\n//读取某个文件\nNSData *data = [fm contentsAtPath:[self dataFilePath]];\n\n//或者\nNSData *data = [NSData dataWithContentOfPath:[self dataFilePath]];\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h1 id="其他说明"><a class="header-anchor" href="#其他说明">#</a> 其他说明</h1><p>IOS管理文件和目录</p><p>1、常见的NSFileManager文件方法</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-(NSData *)contentsAtPath:path　　//从一个文件读取数据\n\n-(BOOL)createFileAtPath: path contents:(NSData *)data attributes:attr　　//向一个文件写入数据\n\n-(BOOL)removeItemAtPath:path error:err　　//删除一个文件\n\n-(BOOL)moveItemAtPath：from toPath:to error:err　　//重命名或者移动一个文件（to不能是已存在的）\n\n-(BOOL)copyItemAtPath:from toPath:to error:err　　//复制文件（to不能是已存在的）\n\n-(BOOL)contentsEqualAtPath:path andPath:path2　　//比较两个文件的内容\n\n-(BOOL)fileExistAtPath:path　　//测试文件是否存在\n\n-(BOOL)isReadableFileAtPath:path　　//测试文件是否存在，并且是否能执行读操作　　\n\n-(BOOL)isWriteableFileAtPath:path　　//测试文件是否存在，并且是否能执行写操作　　\n\n-(NSDictionary *)attributesOfItemAtPath:path error:err　　//获取文件的属性　　\n\n-(BOOL)setAttributesOfItemAtPath:attr error:err　　//更改文件的属性\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>2.使用目录</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-(NSString *)currentDirectoryPath　　//获取当前目录\n\n-(BOOL)changeCurrentDirectoryPath:path　　//更改当前目录\n\n-(BOOL)copyItemAtPath:from toPath:to error:err　　//复制目录结构（to不能是已存在的）\n\n-(BOOL)createDirectoryAtPath:path withIntermediateDirectories:(BOOL)flag attribute:attr　　//创建一个新目录\n\n-(BOOL)fileExistAtPath:path isDirectory:(BOOL*)flag　　//测试文件是不是目录（flag中储存结果YES/NO）\n\n-(NSArray *)contentsOfDirectoryAtPath:path error:err　　//列出目录内容\n\n-(NSDirectoryEnumerator *)enumeratorAtPath:path　　//枚举目录的内容\n\n-(BOOL)removeItemAtPath:path error:err　　//删除空目录\n\n-(BOOL)moveItemAtPath:from toPath:to error:err 　　//重命名或移动一个目录（to不能是已存在的）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>3、常用路径工具方法</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>+(NSString *)pathWithComponens:components　　//根据components中的元素构造有效路径\n\n-(NSArray *)pathComponents　　//析构路径，获得组成此路径的各个部分\n\n-(NSString *)lastPathComponent　　//提取路径的最后一个组成部分\n\n-(NSString *)pathExtension　　//从路径的最后一个组成部分中提取其扩展名\n\n-(NSString *)stringByAppendingPathComponent:path　　//将path添加到现有路径的末尾\n\n-(NSString *)stringByAppendingPathExtension:ext　　//将指定的扩展名添加到路径的最后一个组成部分\n\n-(NSString *)stringByDeletingLastPathComponent　　//删除路径的最后一个组成部分\n\n-(NSString *)stringByDeletingPathExtension　　//从文件的最后一部分删除扩展名\n\n-(NSString *)stringByExpandingTileInPath　　　//将路径中代字符扩展成用户主目录（~）或指定用户的主目录（~user）\n\n-(NSString *)stringByresolvingSymlinksInPath　　//尝试解析路径中的符号链接\n\n-(NSString *)stringByStandardizingPath　　//通过尝试解析~、..（父目录符号）、.（当前目录符号）和符号链接来标准化路径\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>4、常用的路径工具函数</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>NSString* NSUserName(void)　　//返回当前用户的登录名\n\nNSString* NSFullUserName(void)　　//返回当前用户的完整用户名\n\nNSString* NSHomeDirectory(void)　　//返回当前用户主目录的路径\n\nNSString* NSHomeDirectoryForUser(NSString* user)　　//返回用户user的主目录\n\nNSString* NSTemporaryDirectory(void)　　//返回可用于创建临时文件的路径目录\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>5、常用的IOS目录</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Documents(NSDocumentDirectory)　　//用于写入应用相关数据文件的目录，在ios中写入这里的文件能够与iTunes共享并访问，存储在这里的文件会自动备份到云端\n\nLibrary/Caches（NSCachesDirectory)　　//用于写入应用支持文件的目录，保存应用程序再次启动需要的信息。iTunes不会对这个目录的内容进行备份\n\ntmp(use NSTemporaryDirectory())　　//这个目录用于存放临时文件，只程序终止时需要移除这些文件，当应用程序不再需要这些临时文件时，应该将其从这个目录中删除\n\nLibrary/Preferences　　//这个目录包含应用程序的偏好设置文件，使用 NSUserDefault类进行偏好设置文件的创建、读取和修改\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',35),r={render:function(n,e){return a}}}}]);