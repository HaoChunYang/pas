(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[9230],{431:(s,a,n)=>{"use strict";n.r(a),n.d(a,{data:()=>p});const p={key:"v-1ef8fec9",path:"/iOS/CodeSnippet/%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E5%A4%8D%E6%9D%82%E7%9A%84%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"一个比较复杂的密码验证正则表达式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"iOS/CodeSnippet/一个比较复杂的密码验证正则表达式.md",git:{updatedTime:1600412666e3}}},9571:(s,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>t});const p=(0,n(6252).uE)('<h1 id="一个比较复杂的密码验证正则表达式"><a class="header-anchor" href="#一个比较复杂的密码验证正则表达式">#</a> 一个比较复杂的密码验证正则表达式</h1><p>一个比较复杂的密码验证表达式：要求<strong>数字、大字写母、小写字母、特殊字符（<code>!@#$%^&amp;*_+-=</code>）无空格，以上4项，4选3，长度6到12位</strong>。</p><p>正则表达式：</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span>A<span class="token operator">-</span><span class="token builtin">Z0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Z<span class="token operator">!</span>@#$<span class="token operator">%</span><span class="token operator">^</span><span class="token operator">&amp;</span><span class="token operator">*</span><span class="token number">_</span><span class="token operator">+</span>\\<span class="token operator">-</span><span class="token operator">=</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token operator">!</span>@#$<span class="token operator">%</span><span class="token operator">^</span><span class="token operator">&amp;</span><span class="token operator">*</span><span class="token number">_</span><span class="token operator">+</span>\\<span class="token operator">-</span><span class="token operator">=</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token operator">!</span>@#$<span class="token operator">%</span><span class="token operator">^</span><span class="token operator">&amp;</span><span class="token operator">*</span><span class="token number">_</span><span class="token operator">+</span>\\<span class="token operator">-</span><span class="token operator">=</span><span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">)</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token builtin">Z0</span><span class="token operator">-</span><span class="token number">9</span><span class="token operator">!</span>@#$<span class="token operator">%</span><span class="token operator">^</span><span class="token operator">&amp;</span><span class="token operator">*</span><span class="token number">_</span><span class="token operator">+</span>\\<span class="token operator">-</span><span class="token operator">=</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">}</span><span class="token operator">/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>用在iOS中注意转义字符。如下：</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkPassword<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> password <span class="token punctuation">{</span>\n\n    <span class="token builtin">NSString</span> <span class="token operator">*</span> pattern <span class="token operator">=</span> @<span class="token string">&quot;^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z!@#$%^&amp;*_+\\\\-=]+$)(?![a-z0-9]+$)(?![a-z!@#$%^&amp;*_+\\\\-=]+$)(?![0-9!@#$%^&amp;*_+\\\\-=]+$)[a-zA-Z0-9!@#$%^&amp;*_+\\\\-=]{8,18}$&quot;</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>password<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>相关校验文章：</p><ul><li><a href="ios%E5%BC%80%E5%8F%91-%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%AA%8C%E8%AF%81%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2-%E9%AA%8C%E8%AF%81%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E7%AD%89">ios开发-使用正则表达式验证输入字符串-验证身份证号手机号码等</a></li></ul>',8),t={render:function(s,a){return p}}}}]);