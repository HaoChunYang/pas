(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[1426],{7090:(e,o,c)=>{"use strict";c.r(o),c.d(o,{data:()=>d});const d={key:"v-21f1375c",path:"/iOS/XCode%E7%AC%A6%E5%8F%B7%E6%96%AD%E7%82%B9Symbolic_Breakpoint%E5%88%9B%E5%BB%BA%E5%8F%8A%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.html",title:"XCode符号断点Symbolic Breakpoint创建及简单使用",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"创建断点",slug:"创建断点",children:[]},{level:2,title:"编辑断点",slug:"编辑断点",children:[]}],filePathRelative:"iOS/XCode符号断点Symbolic_Breakpoint创建及简单使用.md",git:{updatedTime:1600736461e3}}},4281:(e,o,c)=>{"use strict";c.r(o),c.d(o,{default:()=>b});var d=c(6252);const l=(0,d.uE)('<h1 id="xcode符号断点symbolic-breakpoint创建及简单使用"><a class="header-anchor" href="#xcode符号断点symbolic-breakpoint创建及简单使用">#</a> XCode符号断点<code>Symbolic Breakpoint</code>创建及简单使用</h1><h2 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h2><p><code>Symbolic Breakpoint</code>是一个全局断点，功能非常强大，可以很方法设置各种条件断点。</p><h2 id="创建断点"><a class="header-anchor" href="#创建断点">#</a> 创建断点</h2><p>点击断点界面的<code>+</code>号，选择<code>Add Symbolic Breakpoint</code>就创建了一个断点。</p><h2 id="编辑断点"><a class="header-anchor" href="#编辑断点">#</a> 编辑断点</h2><p>创建好后会直接弹出断点编辑界面，也可以通过右击断点选择<code>Edit Breakpoint…</code>进入编辑界面。</p><p>断点的可编辑项，从编辑界面可以看到断点可编辑的项有<code>Symbol</code>、<code>Module</code>、<code>Condition</code>、<code>Ignore</code>、<code>Action</code>、<code>Options</code>。</p><ul><li><p><code>Symbol </code>断点触发函数。有两种函数写法，C函数样式和OC方法样式。 C函数样式只需要写函数名，不用写后面的()和参数，例如NSLog。 OC方法样式的<code>+/-[className methodName]</code>，+是类方法，-是实例方法，不写则不区分类方法和实例方法。</p></li><li><p><code>Module</code>模块筛选，可以避免不同库中方法名或者函数名相同。</p></li><li><p><code>Condition</code>触发条件。<code>$arg3</code>代表第1个参数，<code>$arg4</code>代表第2个参数，以此类推。样例：<code>Symbol</code>设置为<code>[UIImage imageNamed:]</code>，<code>Condition</code>设置为<code>$arg3 == nil</code>或<code>[(NSString *)$arg3 length] == 0</code>。</p></li><li><p><code>Ignore</code>设置这个值可以忽略前面指定次数的触发。</p></li><li><p><code>Action</code>触发活动。这里是当断点触发后要执行的动作，可以添加多条，执行的顺序是从上到下。</p></li><li><p><code>Options</code>是否进入<code>DEBUG</code>界面。勾选这个断点触发后不进入<code>DEBUG</code>界面，断点打印日志或者声音断点一般都勾选。</p></li></ul><blockquote><p>在断点处，可以使用<code>po $arg1</code>、<code>po $arg2</code>查看第一个参数和第二个参数，以及后面的若干参数</p></blockquote>',10),a=(0,d.Uk)("作者：yumiao 原文链接"),i={href:"https://www.jianshu.com/p/8801cc2d6f99",target:"_blank",rel:"noopener noreferrer"},r=(0,d.Uk)("https://www.jianshu.com/p/8801cc2d6f99"),n=(0,d.Uk)(" 来源：简书 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"),t=(0,d.Wm)("p",null,[(0,d.Wm)("strong",null,"其它参考记录：")],-1),p=(0,d.Wm)("p",null,"使用断点判断组件约束冲突问题",-1),s={href:"https://www.jianshu.com/p/a4bb3c904adb",target:"_blank",rel:"noopener noreferrer"},h=(0,d.Uk)("UIViewAlertForUnsatisfiableConstraints"),m={href:"https://www.jianshu.com/p/a668e6402b59",target:"_blank",rel:"noopener noreferrer"},u=(0,d.Uk)("UnsatisfiableConstraints"),b={render:function(e,o){const c=(0,d.up)("OutboundLink");return(0,d.wg)(),(0,d.j4)(d.HY,null,[l,(0,d.Wm)("p",null,[a,(0,d.Wm)("a",i,[r,(0,d.Wm)(c)]),n]),t,p,(0,d.Wm)("p",null,[(0,d.Wm)("a",s,[h,(0,d.Wm)(c)])]),(0,d.Wm)("p",null,[(0,d.Wm)("a",m,[u,(0,d.Wm)(c)])])],64)}}}}]);