(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[7723],{9179:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-5877393e",path:"/old_blog/iOS%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E6%89%80%E6%9C%89%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E5%8F%98%E9%87%8F%E5%80%BC.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"获得所有属性",slug:"获得所有属性",children:[]},{level:2,title:"获得所有变量",slug:"获得所有变量",children:[]},{level:2,title:"获取对象中属性的类型",slug:"获取对象中属性的类型",children:[]}],filePathRelative:"old_blog/iOS获取对象所有的属性和变量值.md",git:{updatedTime:1597237797e3}}},3711:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="获得所有属性"><a class="header-anchor" href="#获得所有属性">#</a> 获得所有属性</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- (NSArray *)getAllProperty:(id)object\n{\n    NSMutableArray *array = [NSMutableArray array];\n    \n    unsigned int count;\n    objc_property_t *propertys = class_copyPropertyList([object class], &amp;count);\n    for (int i = 0; i &lt; count; i++) {\n        objc_property_t property = propertys[i];\n        const char *nameChar = property_getName(property);\n        NSString *nameStr = [NSString stringWithCString:nameChar encoding:NSUTF8StringEncoding];\n        [array addObject:nameStr];\n    }\n    return [array copy];\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="获得所有变量"><a class="header-anchor" href="#获得所有变量">#</a> 获得所有变量</h2><div class="language-Objective ext-Objective line-numbers-mode"><pre class="language-Objective"><code>- (NSArray *)getAllIvar:(id)object\n{\n    NSMutableArray *array = [NSMutableArray array];\n    \n    unsigned int count;\n    Ivar *ivars = class_copyIvarList([object class], &amp;count);\n    for (int i = 0; i &lt; count; i++) {\n        Ivar ivar = ivars[i];\n        const char *keyChar = ivar_getName(ivar);\n        NSString *keyStr = [NSString stringWithCString:keyChar encoding:NSUTF8StringEncoding];\n        @try {\n            id valueStr = [object valueForKey:keyStr];\n            NSDictionary *dic = nil;\n            if (valueStr) {\n                dic = @{keyStr : valueStr};\n            } else {\n                dic = @{keyStr : @&quot;值为nil&quot;};\n            }\n            [array addObject:dic];\n        }\n        @catch (NSException *exception) {}\n    }\n    return [array copy];\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="获取对象中属性的类型"><a class="header-anchor" href="#获取对象中属性的类型">#</a> 获取对象中属性的类型</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>/**\n  * 返回对象中属性的类型\n  * @return NSString 返回属性的类型\n **/\n+ <span class="token punctuation">(</span>NSString*<span class="token punctuation">)</span>checkPropertyName:<span class="token punctuation">(</span>id<span class="token punctuation">)</span> obj propertyName:<span class="token punctuation">(</span>NSString *<span class="token punctuation">)</span>name <span class="token punctuation">{</span>\n    NSString* propertyType<span class="token punctuation">;</span>\n\n    unsigned int propertyCount<span class="token punctuation">;</span>\n    objc_property_t* properties <span class="token operator">=</span> class_copyPropertyList<span class="token punctuation">(</span><span class="token punctuation">[</span>obj class<span class="token punctuation">]</span>, <span class="token operator">&amp;</span>propertyCount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    for<span class="token punctuation">(</span>int <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>propertyCount<span class="token punctuation">;</span>i++<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        objc_property_t property <span class="token operator">=</span> properties<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        //属性名称\n        const char* propertyName <span class="token operator">=</span> property_getName<span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        NSString* propertyNameStr <span class="token operator">=</span> <span class="token punctuation">[</span>NSString stringWithUTF8String:propertyName<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        //属性对应的类型名字\n        char* typeEncoding <span class="token operator">=</span> property_copyAttributeValue<span class="token punctuation">(</span>property,<span class="token string">&quot;T&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        NSString* typeEncodingStr <span class="token operator">=</span> <span class="token punctuation">[</span>NSString stringWithUTF8String:typeEncoding<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        typeEncodingStr <span class="token operator">=</span> <span class="token punctuation">[</span>typeEncodingStr stringByReplacingOccurrencesOfString:@<span class="token string">&quot;@&quot;</span> withString:@<span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        typeEncodingStr <span class="token operator">=</span> <span class="token punctuation">[</span>typeEncodingStr stringByReplacingOccurrencesOfString:@<span class="token string">&quot;<span class="token entity" title="\\\\">\\\\</span>&quot;</span> withString:@<span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>//此处替换<span class="token punctuation">\\</span><span class="token punctuation">\\</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>name isEqualToString:propertyNameStr<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            propertyType <span class="token operator">=</span> typeEncodingStr<span class="token punctuation">;</span>\n            <span class="token builtin class-name">break</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    free<span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token builtin class-name">return</span> propertyType<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>',6),e={render:function(n,s){return p}}}}]);