(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[4069],{7712:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-0780387c",path:"/iOS/CodeSnippet/ios%E5%BC%80%E5%8F%91-%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%AA%8C%E8%AF%81%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2-%E9%AA%8C%E8%AF%81%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E7%AD%89.html",title:"ios开发-使用正则表达式验证输入字符串-验证身份证号手机号码等",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"iOS/CodeSnippet/ios开发-使用正则表达式验证输入字符串-验证身份证号手机号码等.md",git:{updatedTime:1600412666e3}}},9376:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="ios开发-使用正则表达式验证输入字符串-验证身份证号手机号码等"><a class="header-anchor" href="#ios开发-使用正则表达式验证输入字符串-验证身份证号手机号码等">#</a> ios开发-使用正则表达式验证输入字符串-验证身份证号手机号码等</h1><p>当遇到字符串匹配问题时，有一种常用的解决方法就是正则表达式。通过iOS中的<code>NSRegularExpression</code>这个类就可以帮助我们实现这个。</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>#pragma 正则匹配手机号\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkTelNumber<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> telNumber\n<span class="token punctuation">{</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>pattern <span class="token operator">=</span> @<span class="token string">&quot;^1+[3578]+\\\\d{9}&quot;</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>telNumber<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n#pragma 正则匹配用户密码<span class="token number">6</span><span class="token operator">-</span><span class="token number">18</span>位数字和字母组合\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkPassword<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> password\n<span class="token punctuation">{</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>pattern <span class="token operator">=</span> @<span class="token string">&quot;^(?![0-9]+$)(?![a-zA-Z]+$)[a-zA-Z0-9]{6,18}&quot;</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>password<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n    \n<span class="token punctuation">}</span>\n\n#pragma 正则匹配用户姓名<span class="token punctuation">,</span><span class="token number">20</span>位的中文或英文\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkUserName <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> userName\n<span class="token punctuation">{</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>pattern <span class="token operator">=</span> @<span class="token string">&quot;^[a-zA-Z\\u4E00-\\u9FA5]{1,20}&quot;</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>userName<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n    \n<span class="token punctuation">}</span>\n\n\n#pragma 正则匹配用户身份证号<span class="token number">15</span>或<span class="token number">18</span>位\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkUserIdCard<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> idCard\n<span class="token punctuation">{</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>pattern <span class="token operator">=</span> @<span class="token string">&quot;(^[0-9]{15}$)|([0-9]{17}([0-9]|X)$)&quot;</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>idCard<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n#pragma 正则匹员工号<span class="token punctuation">,</span><span class="token number">12</span>位的数字\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkEmployeeNumber <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> number\n<span class="token punctuation">{</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>pattern <span class="token operator">=</span> @<span class="token string">&quot;^[0-9]{12}&quot;</span><span class="token punctuation">;</span>\n    \n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>number<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n    \n<span class="token punctuation">}</span>\n\n#pragma 正则匹配<span class="token constant">URL</span>\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>checkURL <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">NSString</span> <span class="token operator">*</span><span class="token punctuation">)</span> url\n<span class="token punctuation">{</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>pattern <span class="token operator">=</span> @<span class="token string">&quot;^[0-9A-Za-z]{1,50}&quot;</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSPredicate</span> <span class="token operator">*</span>pred <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSPredicate</span> predicateWithFormat<span class="token punctuation">:</span>@<span class="token string">&quot;SELF MATCHES %@&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">BOOL</span> isMatch <span class="token operator">=</span> <span class="token punctuation">[</span>pred evaluateWithObject<span class="token punctuation">:</span>url<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> isMatch<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div>',3),t={render:function(n,s){return p}}}}]);