(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[1208],{2354:(e,a,n)=>{"use strict";n.r(a),n.d(a,{data:()=>s});const s={key:"v-25284fe1",path:"/old_blog/%E5%88%A9%E7%94%A8masonry%E6%B7%BB%E5%8A%A0%E7%BA%A6%E6%9D%9F%E7%9A%84%E6%8E%A7%E4%BB%B6%EF%BC%8C%E6%B7%BB%E5%8A%A0view%E5%9C%86%E8%A7%92%E6%97%B6%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"解决方案",slug:"解决方案",children:[]},{level:2,title:"分析",slug:"分析",children:[]},{level:2,title:"附：应用示例",slug:"附-应用示例",children:[]}],filePathRelative:"old_blog/利用masonry添加约束的控件，添加view圆角时不显示问题解决.md",git:{updatedTime:1598927806e3}}},2019:(e,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>r});const s=(0,n(6252).uE)('<p>对使用masonry控制的view,直接添加圆角的方式并没有变化。</p><h2 id="解决方案"><a class="header-anchor" href="#解决方案">#</a> 解决方案</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- (void)setCornerOnTop\n{\n    UIBezierPath *maskPath;\n    maskPath = [UIBezierPath bezierPathWithRoundedRect:self.bounds\n                                     byRoundingCorners:(UIRectCornerTopLeft | UIRectCornerTopRight)\n                                           cornerRadii:CGSizeMake(5.0f, 5.0f)];\n    CAShapeLayer *maskLayer = [[CAShapeLayer alloc] init];\n    maskLayer.frame = self.bounds;\n    maskLayer.path = maskPath.CGPath;\n    self.layer.mask = maskLayer;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="分析"><a class="header-anchor" href="#分析">#</a> 分析</h2><p>这是一段给UIView上边缘添加圆角的代码. 在下面方法中调用，才能使利用Masonry添加过约束的UIView产生圆角效果.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- (void)layoutSublayersOfLayer:(CALayer *)layer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>此方法被调用的时刻是:当图层的bounds发生改变,或者图层的setNeedsLayout方法被调用的时候.</p><h2 id="附-应用示例"><a class="header-anchor" href="#附-应用示例">#</a> 附：应用示例</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-(void)layoutSublayersOfLayer:(CALayer *)layer{\n    [super layoutSublayersOfLayer:layer];\n    [self addCornerMethod];\n}\n\n-(void)addCornerMethod{\n    CGFloat width = self.headerImg.frame.size.width/2;\n    UIRectCorner corner = UIRectCornerAllCorners;\n    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:self.headerImg.bounds byRoundingCorners:corner cornerRadii:CGSizeMake(width, width)];\n    CAShapeLayer *masklayer = [[CAShapeLayer alloc]init];\n    masklayer.frame = self.headerImg.bounds;\n    masklayer.path = path.CGPath;\n    self.headerImg.layer.mask = masklayer;\n    \n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>参考：https://blog.csdn.net/p7767158/article/details/50818589</p>',10),r={render:function(e,a){return s}}}}]);