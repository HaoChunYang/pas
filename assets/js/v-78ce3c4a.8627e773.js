(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[4926],{1704:(e,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>s});const s={key:"v-78ce3c4a",path:"/old_blog/Markdown%20%E8%AF%AD%E6%B3%95%E5%92%8C%20MWeb%20%E5%86%99%E4%BD%9C%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html",title:"Markdown 语法和 MWeb 写作使用说明",lang:"zh-CN",frontmatter:{},excerpt:'<h1 id="markdown-语法和-mweb-写作使用说明"><a class="header-anchor" href="#markdown-语法和-mweb-写作使用说明">#</a> Markdown 语法和 MWeb 写作使用说明</h1>\n<h2 id="markdown-的设计哲学"><a class="header-anchor" href="#markdown-的设计哲学">#</a> Markdown 的设计哲学</h2>\n<blockquote>\n<p>Markdown 的目标是实现「易读易写」。\n不过最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。\nMarkdown 的语法有个主要的目的：用来作为一种网路内容的<em>写作</em>用语言。</p>\n</blockquote>\n',headers:[{level:2,title:"Markdown 的设计哲学",slug:"markdown-的设计哲学",children:[]},{level:2,title:"本文约定",slug:"本文约定",children:[]},{level:2,title:"标题",slug:"标题",children:[]},{level:2,title:"第二级标题 <h2>",slug:"第二级标题-h2",children:[]},{level:2,title:"强调",slug:"强调",children:[]},{level:2,title:"换行",slug:"换行",children:[]},{level:2,title:"列表",slug:"列表",children:[{level:3,title:"无序列表",slug:"无序列表",children:[]},{level:3,title:"有序列表",slug:"有序列表",children:[]},{level:3,title:"任务列表（Task lists）",slug:"任务列表-task-lists",children:[]}]},{level:2,title:"图片",slug:"图片",children:[]},{level:2,title:"链接",slug:"链接",children:[]},{level:2,title:"区块引用",slug:"区块引用",children:[]},{level:2,title:"行内代码",slug:"行内代码",children:[]},{level:2,title:"多行或者一段代码",slug:"多行或者一段代码",children:[]},{level:2,title:"顺序图或流程图",slug:"顺序图或流程图",children:[]},{level:2,title:"表格",slug:"表格",children:[]},{level:2,title:"删除线",slug:"删除线",children:[]},{level:2,title:"分隔线",slug:"分隔线",children:[]},{level:2,title:"MathJax",slug:"mathjax",children:[]},{level:2,title:"脚注（Footnote）",slug:"脚注-footnote",children:[]},{level:2,title:"注释和阅读更多",slug:"注释和阅读更多",children:[]},{level:2,title:"TOC",slug:"toc",children:[]}],filePathRelative:"old_blog/Markdown 语法和 MWeb 写作使用说明.md",git:{updatedTime:1597237797e3}}},5820:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>w});var s=a(6252);const l=(0,s.uE)('<h1 id="markdown-语法和-mweb-写作使用说明"><a class="header-anchor" href="#markdown-语法和-mweb-写作使用说明">#</a> Markdown 语法和 MWeb 写作使用说明</h1><h2 id="markdown-的设计哲学"><a class="header-anchor" href="#markdown-的设计哲学">#</a> Markdown 的设计哲学</h2><blockquote><p>Markdown 的目标是实现「易读易写」。 不过最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。 Markdown 的语法有个主要的目的：用来作为一种网路内容的<em>写作</em>用语言。</p></blockquote><h2 id="本文约定"><a class="header-anchor" href="#本文约定">#</a> 本文约定</h2><p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + 4</code> 或 <code>CMD + R</code> 预览才可以看效果。</p><h2 id="标题"><a class="header-anchor" href="#标题">#</a> 标题</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 第一级标题 `&lt;h1&gt;` \n## 第二级标题 `&lt;h2&gt;` \n###### 第六级标题 `&lt;h6&gt;` \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>效果如下：</p><h1 id="第一级标题-h1"><a class="header-anchor" href="#第一级标题-h1">#</a> 第一级标题 <code>&lt;h1&gt;</code></h1><h2 id="第二级标题-h2"><a class="header-anchor" href="#第二级标题-h2">#</a> 第二级标题 <code>&lt;h2&gt;</code></h2><h6 id="第六级标题-h6"><a class="header-anchor" href="#第六级标题-h6">#</a> 第六级标题 <code>&lt;h6&gt;</code></h6><h2 id="强调"><a class="header-anchor" href="#强调">#</a> 强调</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>*这些文字会生成`&lt;em&gt;`*\n_这些文字会生成`&lt;u&gt;`_\n\n**这些文字会生成`&lt;strong&gt;`**\n__这些文字会生成`&lt;strong&gt;`__\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code> 效果如下：</p><p><em>这些文字会生成<code>&lt;em&gt;</code></em><em>这些文字会生成<code>&lt;u&gt;</code></em></p><p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p><h2 id="换行"><a class="header-anchor" href="#换行">#</a> 换行</h2><p>四个及以上空格加回车。 如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p><h2 id="列表"><a class="header-anchor" href="#列表">#</a> 列表</h2><h3 id="无序列表"><a class="header-anchor" href="#无序列表">#</a> 无序列表</h3><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>* 项目一 无序列表 `* + 空格键`\n* 项目二\n* 项目二的子项目一 无序列表 `TAB + * + 空格键`\n* 项目二的子项目二\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在 MWeb 中的快捷键为： <code>Option + U</code> 效果如下：</p><ul><li>项目一 无序列表 <code>* + 空格键</code></li><li>项目二</li><li>项目二的子项目一 无序列表 <code>TAB + * + 空格键</code></li><li>项目二的子项目二</li></ul><h3 id="有序列表"><a class="header-anchor" href="#有序列表">#</a> 有序列表</h3><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1. 项目一 有序列表 `数字 + . + 空格键`\n2. 项目二 \n3. 项目三\n1. 项目三的子项目一 有序列表 `TAB + 数字 + . + 空格键`\n2. 项目三的子项目二\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>效果如下：</p><ol><li>项目一 有序列表 <code>数字 + . + 空格键</code></li><li>项目二</li><li>项目三</li><li>项目三的子项目一 有序列表 <code>TAB + 数字 + . + 空格键</code></li><li>项目三的子项目二</li></ol><h3 id="任务列表-task-lists"><a class="header-anchor" href="#任务列表-task-lists">#</a> 任务列表（Task lists）</h3><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- [ ] 任务一 未做任务 `- + 空格 + [ ]`\n- [x] 任务二 已做任务 `- + 空格 + [x]`\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>效果如下：</p><ul><li>[ ] 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li>[x] 任务二 已做任务 <code>- + 空格 + [x]</code></li></ul><h2 id="图片"><a class="header-anchor" href="#图片">#</a> 图片</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)\n格式: ![Alt Text](url)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>Control + Shift + I</code> 可插入Markdown语法。 如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。 效果如下：</p><p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"></p><p>MWeb 引入的特别的语法来设置图片宽度，方法是在图片描述后加 <code>-w + 图片宽度</code> 即可，比如说要设置上面的图片的宽度为 140，语法如下：</p><p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up-w140"></p><h2 id="链接"><a class="header-anchor" href="#链接">#</a> 链接</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>email &lt;example@example.com&gt;\n[GitHub](http://github.com)\n自动生成连接  &lt;http://www.github.com/&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>Control + Shift + L</code> 可插入Markdown语法。 如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。 效果如下：</p>',47),r=(0,s.Uk)("Email 连接： "),t=(0,s.Wm)("a",{href:"mailto:example@example.com"},"example@example.com",-1),p={href:"http://github.com",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("连接标题Github网站"),c=(0,s.Uk)(" 自动生成连接像： "),d={href:"http://www.github.com/",target:"_blank",rel:"noopener noreferrer"},i=(0,s.Uk)("http://www.github.com/"),h=(0,s.Uk)(" 这样"),u=(0,s.uE)('<h2 id="区块引用"><a class="header-anchor" href="#区块引用">#</a> 区块引用</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>某某说:\n&gt; 第一行引用\n&gt; 第二行费用文字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>CMD + Shift + B</code> 可插入Markdown语法。 效果如下：</p><p>某某说:</p><blockquote><p>第一行引用 第二行费用文字</p></blockquote><h2 id="行内代码"><a class="header-anchor" href="#行内代码">#</a> 行内代码</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>像这样即可：`&lt;addr&gt;` `code`\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>CMD + K</code> 可插入Markdown语法。 效果如下：</p><p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p><h2 id="多行或者一段代码"><a class="header-anchor" href="#多行或者一段代码">#</a> 多行或者一段代码</h2><p>Markdown 语法：</p><pre><code>```js\nfunction fancyAlert(arg) {\n    if(arg) {\n    $.facebox({div:&#39;#foo&#39;})\n    }\n\n}\n```\n</code></pre><p><code>CMD + Shift + K</code> 可插入Markdown语法。 效果如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fancyAlert</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    $<span class="token punctuation">.</span><span class="token function">facebox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>div<span class="token operator">:</span><span class="token string">&#39;#foo&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="顺序图或流程图"><a class="header-anchor" href="#顺序图或流程图">#</a> 顺序图或流程图</h2><p>Markdown 语法：</p><pre><code>```sequence\n张三-&gt;李四: 嘿，小四儿, 写博客了没?\nNote right of 李四: 李四愣了一下，说：\n李四--&gt;张三: 忙得吐血，哪有时间写。\n```\n\n```flow\nst=&gt;start: 开始\ne=&gt;end: 结束\nop=&gt;operation: 我的操作\ncond=&gt;condition: 确认？\n\nst-&gt;op-&gt;cond\ncond(yes)-&gt;e\ncond(no)-&gt;op\n```\n</code></pre><p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p><div class="language-sequence ext-sequence line-numbers-mode"><pre class="language-sequence"><code>张三-&gt;李四: 嘿，小四儿, 写博客了没?\nNote right of 李四: 李四愣了一下，说：\n李四--&gt;张三: 忙得吐血，哪有时间写。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-flow ext-flow line-numbers-mode"><pre class="language-flow"><code>st<span class="token operator">=&gt;</span>start<span class="token operator">:</span> 开始\ne<span class="token operator">=&gt;</span>end<span class="token operator">:</span> 结束\nop<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> 我的操作\ncond<span class="token operator">=&gt;</span>condition<span class="token operator">:</span> 确认？\n\nst<span class="token operator">-</span><span class="token operator">&gt;</span>op<span class="token operator">-</span><span class="token operator">&gt;</span>cond\n<span class="token function">cond</span><span class="token punctuation">(</span>yes<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>e\n<span class="token function">cond</span><span class="token punctuation">(</span>no<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>op\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',22),b=(0,s.Uk)("更多请参考："),m={href:"http://bramp.github.io/js-sequence-diagrams/",target:"_blank",rel:"noopener noreferrer"},g=(0,s.Uk)("http://bramp.github.io/js-sequence-diagrams/"),k=(0,s.Uk)(", "),f={href:"http://adrai.github.io/flowchart.js/",target:"_blank",rel:"noopener noreferrer"},v=(0,s.Uk)("http://adrai.github.io/flowchart.js/"),x=(0,s.uE)('<h2 id="表格"><a class="header-anchor" href="#表格">#</a> 表格</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>第一格表头 | 第二格表头\n--------- | -------------\n内容单元格 第一列第一格 | 内容单元格第二列第一格\n内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>效果如下：</p><table><thead><tr><th>第一格表头</th><th>第二格表头</th></tr></thead><tbody><tr><td>内容单元格 第一列第一格</td><td>内容单元格第二列第一格</td></tr><tr><td>内容单元格 第一列第二格 多加文字</td><td>内容单元格第二列第二格</td></tr></tbody></table><h2 id="删除线"><a class="header-anchor" href="#删除线">#</a> 删除线</h2><p>Markdown 语法：</p><p>加删除线像这样用： <s>删除这些</s></p><p>效果如下：</p><p>加删除线像这样用： <s>删除这些</s></p><h2 id="分隔线"><a class="header-anchor" href="#分隔线">#</a> 分隔线</h2><p>以下三种方式都可以生成分隔线：</p><hr><hr><hr><p>效果如下：</p><hr><hr><hr><h2 id="mathjax"><a class="header-anchor" href="#mathjax">#</a> MathJax</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>块级公式：\n$$\tx = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$\n\n\\\\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =\n1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}\n{1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\\\]\n\n行内公式： $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p><p>块级公式： $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$</p><p>\\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\ldots} } } } \\]</p><p>行内公式： $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$</p><h2 id="脚注-footnote"><a class="header-anchor" href="#脚注-footnote">#</a> 脚注（Footnote）</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>这是一个脚注：[^sample_footnote]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>效果如下：</p><p>这是一个脚注：<a href="%E8%BF%99%E9%87%8C%E6%98%AF%E8%84%9A%E6%B3%A8%E4%BF%A1%E6%81%AF">^sample_footnote</a></p><h2 id="注释和阅读更多"><a class="header-anchor" href="#注释和阅读更多">#</a> 注释和阅读更多</h2><p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><strong>注</strong> 阅读更多的功能只用在生成网站或博客时，插入时注意要后空一行。</p><h2 id="toc"><a class="header-anchor" href="#toc">#</a> TOC</h2><p>Markdown 语法：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[TOC]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>效果如下：</p><p>[TOC]</p>',38),w={render:function(e,n){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[l,(0,s.Wm)("p",null,[r,t,(0,s.Wm)("a",p,[o,(0,s.Wm)(a)]),c,(0,s.Wm)("a",d,[i,(0,s.Wm)(a)]),h]),u,(0,s.Wm)("p",null,[b,(0,s.Wm)("a",m,[g,(0,s.Wm)(a)]),k,(0,s.Wm)("a",f,[v,(0,s.Wm)(a)])]),x],64)}}}}]);