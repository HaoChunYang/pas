(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[8716],{4504:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-6baca22a",path:"/iOS/iOS%E6%B2%99%E7%9B%92%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E6%95%B4%E7%90%86.html",title:"iOS沙盒路径获取整理",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"目录说明",slug:"目录说明",children:[]},{level:2,title:"获取文件路径：",slug:"获取文件路径",children:[]}],filePathRelative:"iOS/iOS沙盒路径获取整理.md",git:{updatedTime:1600154199e3}}},3423:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="ios沙盒路径获取整理"><a class="header-anchor" href="#ios沙盒路径获取整理">#</a> iOS沙盒路径获取整理</h1><h2 id="目录说明"><a class="header-anchor" href="#目录说明">#</a> 目录说明</h2><table><thead><tr><th style="text-align:left;">沙盒目录</th><th>包含内容</th></tr></thead><tbody><tr><td style="text-align:left;">Documents</td><td>存放应用运行时生成的并且需要保留的数据，iCloud同步时会同步该目录</td></tr><tr><td style="text-align:left;">Library/Caches</td><td>存放应用运行时生成的数据，iCloud同步时不会同步该目录</td></tr><tr><td style="text-align:left;">Library/Preferences/</td><td>存放所有的偏好设置</td></tr><tr><td style="text-align:left;">tmp/</td><td>存放应用运行时的临时数据</td></tr></tbody></table><h2 id="获取文件路径"><a class="header-anchor" href="#获取文件路径">#</a> 获取文件路径：</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>    <span class="token comment">//两种获取应用沙盒路径的不同方法</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>documentPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">NSHomeDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> stringByAppendingPathComponent<span class="token punctuation">:</span>@<span class="token string">&quot;Documents&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>cachePath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">NSHomeDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> stringByAppendingPathComponent<span class="token punctuation">:</span>@<span class="token string">&quot;Library/Caches&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>preferencesPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">NSHomeDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> stringByAppendingPathComponent<span class="token punctuation">:</span>@<span class="token string">&quot;Library/Preferences&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>tmpPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">NSHomeDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> stringByAppendingPathComponent<span class="token punctuation">:</span>@<span class="token string">&quot;tmp&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    \n    <span class="token comment">//NSSearchPathForDirectoriesInDomains()返回的是一个数组，这是因为对于Mac OS可能会有多个目录匹配某组指定的查询条件，但是在iOS上只有一个匹配的目录</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>documentPath1 <span class="token operator">=</span> <span class="token function">NSSearchPathForDirectoriesInDomains</span><span class="token punctuation">(</span><span class="token builtin">NSDocumentDirectory</span><span class="token punctuation">,</span> <span class="token builtin">NSUserDomainMask</span><span class="token punctuation">,</span> <span class="token constant">YES</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lastObject<span class="token punctuation">;</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>cachePath1 <span class="token operator">=</span> <span class="token function">NSSearchPathForDirectoriesInDomains</span><span class="token punctuation">(</span><span class="token builtin">NSCachesDirectory</span><span class="token punctuation">,</span> <span class="token builtin">NSUserDomainMask</span><span class="token punctuation">,</span> <span class="token constant">YES</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lastObject<span class="token punctuation">;</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>tmpPath1 <span class="token operator">=</span> <span class="token function">NSTemporaryDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',5),p={render:function(n,s){return t}}}}]);