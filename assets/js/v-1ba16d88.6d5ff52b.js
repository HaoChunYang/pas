(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[7291],{8885:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-1ba16d88",path:"/iOS/CodeSnippet/iOS_%E8%AF%BB%E5%8F%96.json%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9.html",title:"iOS 读取.json文件内容",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"读写json文件主要API",slug:"读写json文件主要api",children:[]}],filePathRelative:"iOS/CodeSnippet/iOS_读取.json文件内容.md",git:{updatedTime:1600154199e3}}},9286:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="ios-读取-json文件内容"><a class="header-anchor" href="#ios-读取-json文件内容">#</a> iOS 读取.json文件内容</h1><p>测试时候，模拟网络请求将json格式的数据写在文件里。可以使用这种方式进行读取。</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>    <span class="token builtin">NSString</span> <span class="token operator">*</span>mainBundleDirectory<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token builtin">NSBundle</span> mainBundle<span class="token punctuation">]</span> bundlePath<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSString</span> <span class="token operator">*</span>path<span class="token operator">=</span><span class="token punctuation">[</span>mainBundleDirectory stringByAppendingPathComponent<span class="token punctuation">:</span>@<span class="token string">&quot;.json文件名&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token constant">NSURL</span> <span class="token operator">*</span>url<span class="token operator">=</span><span class="token punctuation">[</span><span class="token constant">NSURL</span> fileURLWithPath<span class="token punctuation">:</span>path<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSData</span> <span class="token operator">*</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token builtin">NSData</span> alloc<span class="token punctuation">]</span> initWithContentsOfURL<span class="token punctuation">:</span>url<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSDictionary</span> <span class="token operator">*</span>dic <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSJSONSerialization</span> <span class="token builtin">JSONObjectWithData</span><span class="token punctuation">:</span>data options<span class="token punctuation">:</span><span class="token builtin">NSJSONReadingAllowFragments</span> error<span class="token punctuation">:</span><span class="token constant">nil</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">NSLog</span><span class="token punctuation">(</span>@<span class="token string">&quot;%@&quot;</span><span class="token punctuation">,</span>dic<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="读写json文件主要api"><a class="header-anchor" href="#读写json文件主要api">#</a> 读写json文件主要API</h2><p>处理json数据主要是用了<code>NSJSONSerialization</code>这个类，这个类主要有下列三个API：</p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token comment">//判断传入的对象是否可以转化为json数据，如果可以，返回YES，否则返回NO。</span>\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">BOOL</span><span class="token punctuation">)</span>isValidJSONObject<span class="token punctuation">:</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>obj<span class="token punctuation">;</span>\n\n<span class="token comment">//传入一个json数据，返回一个foundation对象</span>\n<span class="token operator">+</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token builtin">JSONObjectWithData</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSData</span> <span class="token operator">*</span><span class="token punctuation">)</span>data options<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSJSONReadingOptions</span><span class="token punctuation">)</span>opt error<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSError</span> <span class="token operator">*</span> _Nullable <span class="token operator">*</span><span class="token punctuation">)</span>error<span class="token punctuation">;</span>\n\n<span class="token comment">//传入foundation对象，转化为json数据</span>\n<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token builtin">NSData</span> <span class="token operator">*</span><span class="token punctuation">)</span>dataWithJSONObject<span class="token punctuation">:</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>obj options<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSJSONWritingOptions</span><span class="token punctuation">)</span>opt error<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">NSError</span> <span class="token operator">*</span> _Nullable <span class="token operator">*</span><span class="token punctuation">)</span>error<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><em>eg.</em></p><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code>    <span class="token builtin">NSDictionary</span> <span class="token operator">*</span> dic <span class="token operator">=</span> @<span class="token punctuation">{</span>@<span class="token string">&quot;aV&quot;</span><span class="token punctuation">:</span>@<span class="token string">&quot;aK&quot;</span><span class="token punctuation">,</span> @<span class="token string">&quot;bV&quot;</span><span class="token punctuation">:</span>@<span class="token string">&quot;bK&quot;</span><span class="token punctuation">,</span> @<span class="token string">&quot;cV&quot;</span><span class="token punctuation">:</span>@<span class="token string">&quot;cK&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    \n    <span class="token comment">//首先判断能否转化为一个json数据，如果能，接下来先把foundation对象转化为NSData类型，然后写入文件</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">NSJSONSerialization</span> isValidJSONObject<span class="token punctuation">:</span>dic<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">NSData</span> <span class="token operator">*</span>jsonData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSJSONSerialization</span> dataWithJSONObject<span class="token punctuation">:</span>dic options<span class="token punctuation">:</span><span class="token number">1</span> error<span class="token punctuation">:</span><span class="token constant">nil</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">[</span>jsonData writeToFile<span class="token punctuation">:</span>jsonPath atomically<span class="token punctuation">:</span><span class="token constant">YES</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n      \n    <span class="token comment">//在读取的时候首先去文件中读取为NSData类对象，然后通过NSJSONSerialization类将其转化为foundation对象</span>\n    <span class="token builtin">NSData</span> <span class="token operator">*</span>jsonData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token builtin">NSFileManager</span> defaultManager<span class="token punctuation">]</span> contentsAtPath<span class="token punctuation">:</span>jsonPath<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token builtin">NSArray</span> <span class="token operator">*</span>jsonDic <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">NSJSONSerialization</span> <span class="token builtin">JSONObjectWithData</span><span class="token punctuation">:</span>jsonData options<span class="token punctuation">:</span><span class="token number">1</span> error<span class="token punctuation">:</span><span class="token constant">nil</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',8),p={render:function(n,s){return t}}}}]);