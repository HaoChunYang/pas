(self.webpackChunkbugu=self.webpackChunkbugu||[]).push([[8207],{4132:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>e});const e={key:"v-0a63b3b7",path:"/iOS/Xcode11%E6%96%B0%E5%8F%98%E5%8C%96%EF%BC%9ASceneDelegate.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Xcode11新变化：SceneDelegate",slug:"xcode11新变化-scenedelegate",children:[]},{level:2,title:"更新后代码写法",slug:"更新后代码写法",children:[]},{level:2,title:"其它参考博文",slug:"其它参考博文",children:[]}],filePathRelative:"iOS/Xcode11新变化：SceneDelegate.md",git:{updatedTime:1600918294e3}}},1956:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>b});var e=s(6252);const p=(0,e.Wm)("h2",{id:"xcode11新变化-scenedelegate"},[(0,e.Wm)("a",{class:"header-anchor",href:"#xcode11新变化-scenedelegate"},"#"),(0,e.Uk)(" Xcode11新变化：SceneDelegate")],-1),t=(0,e.Wm)("p",null,[(0,e.Uk)("使用Xcode11新建iOS项目时,如果你跟往常一样在"),(0,e.Wm)("code",null,"Appdelegate"),(0,e.Uk)("的"),(0,e.Wm)("code",null,"- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions"),(0,e.Uk)("方法中创建根控制器，会崩溃报错：")],-1),o=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Appdelegate"),(0,e.Uk)("找不到设置window的方法。")],-1),c=(0,e.Uk)("然后发现Xcode自动新增了一个"),l=(0,e.Wm)("code",null,"SceneDelegate",-1),i=(0,e.Uk)("文件，查找了一下官方文档"),u={href:"https://developer.apple.com/videos/play/wwdc2019/423/",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("WWDC2019：Optimizing App Launch"),d=(0,e.Uk)(" 发现，iOS13中appdelegate的职责发现了改变： iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期； iOS13之后，Appdelegate的职责是："),k=(0,e.uE)('<blockquote><p>1、处理 App 生命周期 2、新的 Scene Session 生命周期</p><p>UI的生命周期，交给新增的<code>Scene Delegate</code>处理</p></blockquote><p>这种模式完全没问题，因为只有一个进程，只有一个与这个进程对应的用户界面 但是iOS13之后，Appdelegate不在负责UI生命周期，所有UI生命周期交给SceneDelegate处理.</p><p>因此初始化window方法需要改变： 现在不再<code>Appdelegate</code>的<code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</code>进行初始化，转交给<code>SceneDelegate</code>的<code>willConnectToSession:</code>方法进行根控制器设置：</p><h2 id="更新后代码写法"><a class="header-anchor" href="#更新后代码写法">#</a> 更新后代码写法</h2><div class="language-swift ext-swift line-numbers-mode"><pre class="language-swift"><code><span class="token operator">-</span> <span class="token punctuation">(</span>void<span class="token punctuation">)</span>scene<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">UIScene</span> <span class="token operator">*</span><span class="token punctuation">)</span>scene willConnectToSession<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">UISceneSession</span> <span class="token operator">*</span><span class="token punctuation">)</span>session options<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token builtin">UISceneConnectionOptions</span> <span class="token operator">*</span><span class="token punctuation">)</span>connectionOptions <span class="token punctuation">{</span>\n\n    <span class="token builtin">UIWindowScene</span> <span class="token operator">*</span>windowScene <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">UIWindowScene</span> <span class="token operator">*</span><span class="token punctuation">)</span>scene<span class="token punctuation">;</span>\n    <span class="token keyword">self</span><span class="token punctuation">.</span>window <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token builtin">UIWindow</span> alloc<span class="token punctuation">]</span> initWithWindowScene<span class="token punctuation">:</span>windowScene<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">self</span><span class="token punctuation">.</span>window<span class="token punctuation">.</span>frame <span class="token operator">=</span> windowScene<span class="token punctuation">.</span>coordinateSpace<span class="token punctuation">.</span>bounds<span class="token punctuation">;</span>\n    <span class="token keyword">self</span><span class="token punctuation">.</span>window<span class="token punctuation">.</span>rootViewController <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">UITabBarController</span> <span class="token keyword">new</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>window makeKeyAndVisible<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="其它参考博文"><a class="header-anchor" href="#其它参考博文">#</a> 其它参考博文</h2>',6),w={href:"https://www.jianshu.com/p/53e3252dc07e",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("iOS13 Scene Delegate详解"),b={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,t,o,(0,e.Wm)("p",null,[c,l,i,(0,e.Wm)("a",u,[r,(0,e.Wm)(s)]),d]),k,(0,e.Wm)("p",null,[(0,e.Wm)("a",w,[h,(0,e.Wm)(s)])])],64)}}}}]);